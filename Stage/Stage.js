/* eslint-disable require-yield, eqeqeq */

import {
  Stage as StageBase,
  Trigger,
  Watcher,
  Costume,
  Color,
  Sound,
} from "https://unpkg.com/leopard@^1/dist/index.esm.js";

export default class Stage extends StageBase {
  constructor(...args) {
    super(...args);

    this.costumes = [
      new Costume("backdrop1", "./Stage/costumes/backdrop1.svg", {
        x: 243.5,
        y: 183,
      }),
    ];

    this.sounds = [new Sound("pop", "./Stage/sounds/pop.wav")];

    this.triggers = [];

    this.vars.slot1 = "Grasy";
    this.vars.atk1 = 1;
    this.vars.hp1 = 1;
    this.vars.turn = 0;
    this.vars.slot2 = "Grasy";
    this.vars.slot3 = "Grasy";
    this.vars.slot4 = "Grasy";
    this.vars.atk2 = 1;
    this.vars.atk3 = 1;
    this.vars.atk4 = 1;
    this.vars.hp2 = 1;
    this.vars.hp3 = 1;
    this.vars.hp4 = 1;
    this.vars.battleid = 0;
    this.vars.hider = 0;
    this.vars.enemyatk = 0;
    this.vars.enemyhp = -2;
    this.vars.currentSlot = 0;
    this.vars.savecode = "yyyyyyyy";
    this.vars.testerslot = 0;
    this.vars.ownedpets = [
      "???",
      "???",
      "Grasy",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
      "???",
    ];
    this.vars.petatk = [
      -15, 75, 1, 3, 5, 2, 1, 2, 4, 3, 220, 15, 5, 33, 22, 3, 0.0001,
    ];
    this.vars.pethp = [
      1, 55, 1, 7, 5, 10, 15, 10, 5, 1, 725, 2, 10, 17, 73, 20, 1.0001,
    ];
    this.vars.saver = [
      "y",
      "y",
      "y",
      "y",
      "y",
      "y",
      "y",
      "y",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "n",
      "y",
      "n",
      "n",
      "n",
      "n",
      "n",
    ];

    this.watchers.slot1 = new Watcher({
      label: "Slot 1",
      style: "normal",
      visible: true,
      value: () => this.vars.slot1,
      x: 314,
      y: -157,
    });
    this.watchers.atk1 = new Watcher({
      label: "atk1",
      style: "large",
      visible: true,
      value: () => this.vars.atk1,
      x: 240,
      y: 158,
    });
    this.watchers.hp1 = new Watcher({
      label: "hp1",
      style: "large",
      visible: true,
      value: () => this.vars.hp1,
      x: 240,
      y: 137,
    });
    this.watchers.turn = new Watcher({
      label: "Turn",
      style: "normal",
      visible: true,
      value: () => this.vars.turn,
      x: 240,
      y: 180,
    });
    this.watchers.slot2 = new Watcher({
      label: "Slot 2",
      style: "normal",
      visible: true,
      value: () => this.vars.slot2,
      x: 416,
      y: -157,
    });
    this.watchers.slot3 = new Watcher({
      label: "Slot 3",
      style: "normal",
      visible: true,
      value: () => this.vars.slot3,
      x: 518,
      y: -157,
    });
    this.watchers.slot4 = new Watcher({
      label: "Slot 4",
      style: "normal",
      visible: true,
      value: () => this.vars.slot4,
      x: 620,
      y: -157,
    });
    this.watchers.atk2 = new Watcher({
      label: "atk2",
      style: "large",
      visible: true,
      value: () => this.vars.atk2,
      x: 240,
      y: 104,
    });
    this.watchers.atk3 = new Watcher({
      label: "atk3",
      style: "large",
      visible: true,
      value: () => this.vars.atk3,
      x: 240,
      y: 46,
    });
    this.watchers.atk4 = new Watcher({
      label: "atk4",
      style: "large",
      visible: true,
      value: () => this.vars.atk4,
      x: 240,
      y: -9,
    });
    this.watchers.hp2 = new Watcher({
      label: "hp2",
      style: "large",
      visible: true,
      value: () => this.vars.hp2,
      x: 240,
      y: 81,
    });
    this.watchers.hp3 = new Watcher({
      label: "hp3",
      style: "large",
      visible: true,
      value: () => this.vars.hp3,
      x: 240,
      y: 24,
    });
    this.watchers.hp4 = new Watcher({
      label: "hp4",
      style: "large",
      visible: true,
      value: () => this.vars.hp4,
      x: 240,
      y: -31,
    });
    this.watchers.enemyatk = new Watcher({
      label: "Enemyatk",
      style: "large",
      visible: true,
      value: () => this.vars.enemyatk,
      x: 464,
      y: 180,
    });
    this.watchers.enemyhp = new Watcher({
      label: "Enemyhp",
      style: "large",
      visible: true,
      value: () => this.vars.enemyhp,
      x: 464,
      y: 156,
    });
    this.watchers.ownedpets = new Watcher({
      label: "Ownedpets",
      style: "normal",
      visible: false,
      value: () => this.vars.ownedpets,
      x: 616,
      y: 180,
      width: undefined,
      height: undefined,
    });
    this.watchers.petatk = new Watcher({
      label: "Petatk",
      style: "normal",
      visible: false,
      value: () => this.vars.petatk,
      x: 409,
      y: 180,
      width: undefined,
      height: undefined,
    });
    this.watchers.pethp = new Watcher({
      label: "Pethp",
      style: "normal",
      visible: false,
      value: () => this.vars.pethp,
      x: 512,
      y: 180,
      width: undefined,
      height: undefined,
    });
  }
}
